{"version":3,"sources":["components/Headers/Headers.module.css","components/DataRows/DataRows.module.css","components/InputForm/InputForm.module.css","components/DataRows/DataRow/DataRow.module.css","App.module.css","components/RadioFilters/RadioFilters.module.css","components/Footer/Footer.module.css","components/ResetButton/ResetButton.module.css","components/Headers/Headers.js","components/DataRows/DataRow/DataRow.js","hoc/Aux_.js","components/DataRows/DataRows.js","components/InputForm/InputForm.js","components/RadioFilters/RadioFilters.js","components/Footer/Footer.js","components/ResetButton/ResetButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Headers","props","matches","useMediaQuery","headers","map","header","index","displayHeader","split","headerPart","charAt","toUpperCase","concat","slice","join","HeaderTag","replace","Grid","item","xs","key","className","classes","TH","is","onClick","headerClick","id","data-index","sortDirection","hidden","container","Divider","Full","DataRow","policyKeys","keye","md","passedIndex","Mobile","type","value","customer","onChange","event","changer","Aux","children","DataRows","customers","policies","changed","Button","variant","color","size","del","InputForm","formItems","Object","keys","newRecord","InputRow","input","add","disabled","formValid","RadioFilters","radioContent","label","rd","FormControlLabel","style","display","control","Radio","Spacer","RadioGroup","row","filterChange","radios","Footer","ResetButton","resetButton","App","state","client","customer_name","customer_address","premium","policy_type","insurer_name","filterPolicies","resetHandler","setState","data","name","window","location","href","handleFilterChange","filtered","filterArr","target","filter","f","inputHandler","field","newObj","prevState","newRecordObj","newRecordKeys","record","length","addHandler","newArr","deleteHandler","splice","changeDataHandler","col","headerClickHandler","policiesArr","dataType","sortIndex","getAttribute","sort","a","b","numA","Number","numB","arrA","arrB","shift","textAA","textBB","textA","textB","direction","sortDirectionNew","this","Container","maxWidth","Paper","elevation","Float","justify","Typography","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8892cb3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TH\":\"Headers_TH__P8hXq\",\"hidden\":\"Headers_hidden__7uKXG\",\"Full\":\"Headers_Full__1w8on\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataRows\":\"DataRows_DataRows__1f7qB\",\"DataRow\":\"DataRows_DataRow__27Rvl\",\"Full\":\"DataRows_Full__3PAQV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputRow\":\"InputForm_InputRow__2J8Yi\",\"Full\":\"InputForm_Full__Cc1Yi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataRow\":\"DataRow_DataRow__2gbPd\",\"Mobile\":\"DataRow_Mobile__1MZ_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1lD6s\",\"Spacer\":\"App_Spacer__1HWG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spacer\":\"RadioFilters_Spacer__26OS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__1TM6y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ResetButton\":\"ResetButton_ResetButton__3Pe3O\"};","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport classes from './Headers.module.css';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst Headers = (props) => {\r\n    const matches = useMediaQuery('(min-width:960px)');\r\n\r\n    let headers = null;\r\n\r\n    if (props.headers && matches) {\r\n        headers = props.headers.map((header, index) => {\r\n\r\n            //get nicely formatted display headeers to show on the page\r\n            const displayHeader = header.split('_').map((headerPart) => {\r\n                return headerPart.charAt(0).toUpperCase().concat(headerPart.slice(1));\r\n            }).join(' ');\r\n\r\n            //create a component tag in the correct format\r\n            let HeaderTag = header.replace('_', '');\r\n            HeaderTag = HeaderTag.charAt(0).toUpperCase().concat(HeaderTag.slice(1));\r\n\r\n            return (\r\n                <Grid item xs={2} key={`id_${header}_${index}`} className={classes.TH}>\r\n                    <HeaderTag is='custom' onClick={props.headerClick} id={header} data-index={index}>\r\n                        {displayHeader}{props.sortDirection[index] === 'ASC' ? <span>&gt;</span> : props.sortDirection[index] === 'DESC' ? <span>&lt;</span> : <span className={classes.hidden}>_</span>}\r\n                    </HeaderTag>\r\n                </Grid>\r\n            );\r\n        })\r\n    }\r\n    return (\r\n        <Grid container item xs={12}>\r\n            {headers}\r\n            <Divider className={classes.Full} />\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Headers;","\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import Button from '@material-ui/core/Button';\r\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport classes from './DataRow.module.css';\r\n\r\n\r\nconst DataRow = (props) => {\r\n    const item = props.policyKeys.map((keye, index) => {\r\n        return (\r\n            <Grid item xs={12} md={2} className={classes.DataRow} key={`input_${props.passedIndex}_${index}`}>\r\n                <p className={classes.Mobile}><strong>{keye.replace('_', ' ')}</strong></p>\r\n                <input type='text' value={props.customer[keye]} onChange={(event) => props.changer(event, keye, props.passedIndex)}></input>\r\n            </Grid>\r\n        )\r\n    });\r\n\r\n    return item;\r\n}\r\nexport default DataRow;","const Aux = (props) => props.children;\r\n\r\nexport default Aux;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport classes from './DataRows.module.css';\r\nimport DataRow from './DataRow/DataRow'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Aux from '../../hoc/Aux_';\r\n\r\nconst DataRows = (props) => {\r\n\r\n    let customers = null;\r\n\r\n    if (props.policies) {\r\n\r\n        customers = props.policies.map((customer, index) => {\r\n            return (\r\n                <Aux key={`id__${index}`}>\r\n                    <Grid container item xs={12}  className={classes.DataRows}>\r\n\r\n                        <DataRow policyKeys={props.policyKeys} changer={props.changed} customer={customer} passedIndex={index} />\r\n\r\n                        <Grid item xs={12} md={2} className={classes.DataRow}>\r\n                            <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={() => props.del(index)}>Delete</Button>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    <Divider className={classes.Full}/>\r\n                </Aux>\r\n            );\r\n        })\r\n    }\r\n    return <Grid container item xs={12}>{customers}</Grid>;\r\n}\r\n\r\nexport default DataRows;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport classes from './InputForm.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst InputForm = (props) => {\r\n    const formItems = Object.keys(props.newRecord).map((key, index) => {\r\n        return (\r\n            <Grid xs={12} md={2} item className={classes.InputRow} key={`id_${key}_${index}`}>\r\n                <input type='text' onChange={(event) => props.input(event, key)} value={props.newRecord[key] || ''} />\r\n            </Grid>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Grid container item xs={12} >\r\n            {formItems}\r\n            <Grid xs={12} md={2} item className={classes.InputRow}>\r\n                <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={props.add} disabled={!props.formValid}>Add Policy</Button>\r\n            </Grid>\r\n\r\n            <Divider className={classes.Full} />\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default InputForm;\r\n\r\n","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport classes from './RadioFilters.module.css';\r\n\r\nconst RadioFilters = (props) => {\r\n    const matches = useMediaQuery('(min-width:960px)');\r\n\r\n    const radioData = [\r\n        { value: 'more', label: 'Premium £3000 or more' },\r\n        { value: 'less', label: 'Premium less than £3000' },\r\n        { value: 'none', label: 'No filter' }\r\n    ];\r\n\r\n    const radioContent = radioData.map((rd, index) => {\r\n        return (\r\n            <FormControlLabel\r\n                style={matches ? { display: 'inline-flex' } : { display: 'block' }}\r\n                key={`${rd.value}_${index}`}\r\n                value={rd.value}\r\n                control={\r\n                    <Radio\r\n                        color='primary'\r\n                    />\r\n                }\r\n                label={rd.label}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.Spacer}>\r\n            <RadioGroup row style={{ display: 'block' }} onChange={props.filterChange} value={props.radios}>\r\n                {radioContent}\r\n            </RadioGroup>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default RadioFilters;\r\n\r\n","import React from 'react';\r\nimport classes from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className={classes.Footer}>\r\n            <span>Created by Stuart Ferguson</span>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport classes from './ResetButton.module.css';\r\n\r\nconst ResetButton = (props) => {\r\n    return (\r\n        <Grid item md={2} xs={12} className={classes.ResetButton}>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={props.resetButton}>Reset</Button>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default ResetButton;","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableRow from '@material-ui/core/TableRow';\r\n// import Button from '@material-ui/core/Button';\r\n// import Radio from '@material-ui/core/Radio';\r\n// import RadioGroup from '@material-ui/core/RadioGroup';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Headers from './components/Headers/Headers';\r\nimport DataRows from './components/DataRows/DataRows';\r\nimport InputForm from './components/InputForm/InputForm';\r\nimport RadioFilters from './components/RadioFilters/RadioFilters';\r\nimport Footer from './components/Footer/Footer';\r\nimport ResetButton from './components/ResetButton/ResetButton';\r\nimport data from './data/data.json'\r\n// import axios from 'axios';\r\nimport classes from './App.module.css';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    sortDirection: [null, null, null, null, null],\r\n    policies: null,\r\n    client: null,\r\n    headers: null,\r\n    newRecord: {\r\n      customer_name: '',\r\n      customer_address: '',\r\n      premium: '',\r\n      policy_type: '',\r\n      insurer_name: ''\r\n    },\r\n    formValid: false,\r\n    filterPolicies: null,\r\n    radios: 'none'\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(data, Object.keys(data.client.policies[0]))\r\n\r\n    //set state from JSON\r\n    this.setState({\r\n      policies: data.client.policies,\r\n      client: data.client.name,\r\n      headers: Object.keys(data.client.policies[0]),     //get headers from JSON\r\n      filterPolicies: data.client.policies,\r\n    });\r\n  }\r\n\r\n  resetHandler = () => {\r\n    this.setState({\r\n      sortDirection: [null, null, null, null, null],\r\n      policies: data.client.policies,\r\n      client: data.client.name,\r\n      headers: Object.keys(data.client.policies[0]),\r\n      newRecord: {\r\n        customer_name: '',\r\n        customer_address: '',\r\n        premium: '',\r\n        policy_type: '',\r\n        insurer_name: ''\r\n      },\r\n      formValid: false,\r\n      filterPolicies: data.client.policies,\r\n      radios: 'none'\r\n    });\r\n\r\n    window.location.href='/build';\r\n  }\r\n\r\n\r\n  handleFilterChange = (event) => {\r\n\r\n    const filterArr = [...this.state.filterPolicies];\r\n\r\n    let filtered;\r\n    switch (event.target.value) {\r\n      case 'more':\r\n        filtered = filterArr.filter((f) => {\r\n          return f.premium >= 3000;\r\n        });\r\n        break;\r\n      case 'less':\r\n        filtered = filterArr.filter((f) => {\r\n          return f.premium < 3000;\r\n        });\r\n        break;\r\n      default:\r\n        filtered = this.state.filterPolicies;\r\n    }\r\n\r\n    this.setState({\r\n      policies: filtered,\r\n      radios: event.target.value\r\n    });\r\n  }\r\n\r\n  inputHandler = (event, field) => {\r\n\r\n    const newObj = { ...this.state.newRecord };\r\n    newObj[field] = event.target.value;\r\n\r\n    this.setState({\r\n      newRecord: newObj\r\n    });\r\n\r\n    this.setState((prevState) => {\r\n\r\n      const newRecordObj = prevState.newRecord\r\n      const newRecordKeys = Object.keys(newRecordObj);\r\n\r\n      const validCount = newRecordKeys\r\n        .map((key) => {\r\n          return newRecordObj[key];\r\n        })\r\n        .filter((record) => {\r\n          return record.length > 0;\r\n        });\r\n\r\n      return {\r\n        formValid: validCount.length === newRecordKeys.length\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  addHandler = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        policies: prevState.filterPolicies,\r\n      }\r\n    });\r\n    const newArr = [...this.state.filterPolicies, this.state.newRecord];\r\n\r\n    this.setState({\r\n      newRecord: {\r\n        customer_name: '',\r\n        customer_address: '',\r\n        premium: '',\r\n        policy_type: '',\r\n        insurer_name: ''\r\n      },\r\n      formValid: false,\r\n      policies: newArr,\r\n      filterPolicies: newArr,\r\n      radios: 'none'\r\n    });\r\n  }\r\n\r\n  deleteHandler = (index) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        policies: prevState.filterPolicies,\r\n      }\r\n    });\r\n\r\n    const newArr = [...this.state.filterPolicies];\r\n    newArr.splice(index, 1);\r\n\r\n    this.setState({\r\n      policies: newArr,\r\n      filterPolicies: newArr,\r\n      radios: 'none'\r\n    });\r\n  }\r\n\r\n  changeDataHandler = (event, col, index) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        policies: prevState.filterPolicies,\r\n      }\r\n    });\r\n\r\n    const newArr = [...this.state.policies];\r\n    newArr[index][col] = event.target.value;\r\n\r\n    this.setState({\r\n      policies: newArr,\r\n      filterPolicies: newArr\r\n    });\r\n  }\r\n\r\n  //handle clicks on table headers\r\n  headerClickHandler = (event) => {\r\n\r\n    //sorting for 3 types (numbers, text and text that begins with a number)\r\n    //should be condensed (DRY) but code is reused a couple of times\r\n\r\n    let policiesArr = [...this.state.policies];\r\n    const dataType = event.target.id;\r\n    const sortIndex = event.target.getAttribute('data-index');\r\n\r\n    if (dataType === 'premium') {\r\n      policiesArr.sort((a, b) => {\r\n        let numA = Number(a[dataType]);\r\n        let numB = Number(b[dataType]);\r\n\r\n        if (!this.state.sortDirection[sortIndex] || this.state.sortDirection[sortIndex] === 'DESC') {\r\n          return (numA < numB) ? -1 : (numA > numB) ? 1 : 0;\r\n        }\r\n        else {\r\n          return (numA > numB) ? -1 : (numA < numB) ? 1 : 0;\r\n        }\r\n      });\r\n    }\r\n\r\n    else if (dataType === 'customer_address') {\r\n\r\n      policiesArr.sort((a, b) => {\r\n        let arrA = a[dataType].toUpperCase().split(' ');\r\n        let arrB = b[dataType].toUpperCase().split(' ');\r\n\r\n        if (arrA.length > 1) {\r\n          arrA.shift();\r\n        }\r\n        if (arrB.length > 1) {\r\n          arrB.shift();\r\n        }\r\n\r\n        let textAA = arrA.join(' ');\r\n        let textBB = arrB.join(' ');\r\n\r\n        if (!this.state.sortDirection[sortIndex] || this.state.sortDirection[sortIndex] === 'DESC') {\r\n          return (textAA < textBB) ? -1 : (textAA > textBB) ? 1 : 0;\r\n        }\r\n        else {\r\n          return (textAA > textBB) ? -1 : (textAA < textBB) ? 1 : 0;\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      policiesArr.sort((a, b) => {\r\n        let textA = a[dataType].toUpperCase();\r\n        let textB = b[dataType].toUpperCase();\r\n        if (!this.state.sortDirection[sortIndex] || this.state.sortDirection[sortIndex] === 'DESC') {\r\n          return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n        }\r\n        else {\r\n          return (textA > textB) ? -1 : (textA < textB) ? 1 : 0;\r\n        }\r\n      });\r\n    }\r\n\r\n    //sort directions\r\n    let direction = 'DESC'\r\n    if (!this.state.sortDirection[sortIndex] || this.state.sortDirection[sortIndex] === 'DESC') {\r\n      direction = 'ASC';\r\n    }\r\n\r\n    let sortDirectionNew = [null, null, null, null, null];\r\n    sortDirectionNew[sortIndex] = direction;\r\n\r\n    this.setState({\r\n      policies: policiesArr,\r\n      sortDirection: sortDirectionNew\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={classes.App}>\r\n        <Container maxWidth=\"lg\"  >\r\n          <Paper elevation={3} className={classes.Float}>\r\n            <Grid container item xs={12} justify=\"center\">\r\n              <Grid item xs={12} >\r\n                <Typography variant=\"h2\">\r\n                  {this.state.client}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={10} >\r\n                <p>Online policy database. Columns can be sorted by clicking on the column headings.</p>\r\n              </Grid>\r\n\r\n              <RadioFilters filterChange={this.handleFilterChange} radios={this.state.radios} />\r\n              <Headers headers={this.state.headers} sortDirection={this.state.sortDirection} headerClick={this.headerClickHandler} />\r\n              <DataRows policies={this.state.policies} del={this.deleteHandler} changed={this.changeDataHandler} policyKeys={Object.keys(this.state.newRecord)} />\r\n              <InputForm newRecord={this.state.newRecord} formValid={this.state.formValid} add={this.addHandler} input={this.inputHandler} />\r\n\r\n              <ResetButton resetButton={this.resetHandler} />\r\n              <Footer />\r\n            </Grid>\r\n          </Paper>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}