{"version":3,"sources":["components/Headers/Headers.module.css","components/DataRows/DataRows.module.css","components/InputForm/InputForm.module.css","components/DataRows/DataRow/DataRow.module.css","App.module.css","components/RadioFilters/RadioFilters.module.css","components/Footer/Footer.module.css","components/ResetButton/ResetButton.module.css","components/Headers/Headers.js","components/DataRows/DataRow/DataRow.js","hoc/Aux.js","components/DataRows/DataRows.js","components/InputForm/InputForm.js","components/RadioFilters/RadioFilters.js","components/Footer/Footer.js","components/ResetButton/ResetButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Headers","props","matches","useMediaQuery","headers","map","header","index","displayHeader","split","headerPart","charAt","toUpperCase","concat","slice","join","HeaderTag","replace","Grid","item","xs","key","className","classes","TH","is","onClick","headerClick","id","data-index","sortDirection","hidden","container","Divider","Full","DataRow","policyKeys","keye","md","Mobile","type","value","customer","onChange","event","changer","passedIndex","Aux","children","DataRows","customers","policies","customer_name","changed","Button","variant","color","size","del","InputForm","formItems","Object","keys","newRecord","InputRow","input","add","disabled","formValid","RadioFilters","radioContent","label","rd","FormControlLabel","style","display","control","Radio","Spacer","RadioGroup","row","filterChange","radios","Footer","ResetButton","resetButton","App","state","client","customer_address","premium","policy_type","insurer_name","filterPolicies","resetHandler","setState","data","name","window","location","href","handleFilterChange","filtered","filterArr","target","filter","f","inputHandler","field","newObj","prevState","newRecordObj","newRecordKeys","record","length","addHandler","newArr","filters","deleteHandler","splice","changeDataHandler","col","headerClickHandler","policiesArr","dataType","sortIndex","getAttribute","sort","a","b","numA","Number","numB","arrA","arrB","shift","textAA","textBB","textA","textB","direction","sortDirectionNew","this","Container","maxWidth","Paper","elevation","Float","justify","Typography","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ccc7363c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TH\":\"Headers_TH__BWHQX\",\"hidden\":\"Headers_hidden__z6VyK\",\"Full\":\"Headers_Full__1HZoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataRows\":\"DataRows_DataRows__ee-Ku\",\"DataRow\":\"DataRows_DataRow__3pZCX\",\"Full\":\"DataRows_Full__35oTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputRow\":\"InputForm_InputRow__3mzAs\",\"Full\":\"InputForm_Full__2PvBJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataRow\":\"DataRow_DataRow__NMtya\",\"Mobile\":\"DataRow_Mobile__2md0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3I9ZT\",\"Spacer\":\"App_Spacer__2sp-i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spacer\":\"RadioFilters_Spacer__34_yy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__2DDUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ResetButton\":\"ResetButton_ResetButton__2R--o\"};","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport classes from './Headers.module.css';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst Headers = (props) => {\r\n    const matches = useMediaQuery('(min-width:960px)');\r\n\r\n    let headers = null;\r\n\r\n    if (props.headers && matches) {\r\n        headers = props.headers.map((header, index) => {\r\n\r\n            //get nicely formatted display headeers to show on the page\r\n            const displayHeader = header.split('_').map((headerPart) => {\r\n                return headerPart.charAt(0).toUpperCase().concat(headerPart.slice(1));\r\n            }).join(' ');\r\n\r\n            //create a component tag in the correct format\r\n            let HeaderTag = header.replace('_', '');\r\n            HeaderTag = HeaderTag.charAt(0).toUpperCase().concat(HeaderTag.slice(1));\r\n\r\n            return (\r\n                <Grid item xs={2} key={`id_${header}_${index}`} className={classes.TH}>\r\n                    <HeaderTag is='custom' onClick={props.headerClick} id={header} data-index={index}>\r\n                        {displayHeader}{props.sortDirection[index] === 'ASC' ? <span>&gt;</span> : props.sortDirection[index] === 'DESC' ? <span>&lt;</span> : <span className={classes.hidden}>_</span>}\r\n                    </HeaderTag>\r\n                </Grid>\r\n            );\r\n        })\r\n    }\r\n    return (\r\n        <Grid container item xs={12}>\r\n            {headers}\r\n            <Divider className={classes.Full} />\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Headers;","\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import Button from '@material-ui/core/Button';\r\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport classes from './DataRow.module.css';\r\n\r\n\r\nconst DataRow = (props) => {\r\n    const item = props.policyKeys.map((keye, index) => {\r\n        return (\r\n            <Grid item xs={12} md={2} className={classes.DataRow} key={`${keye}_${index}`}>\r\n                <p className={classes.Mobile}><strong>{keye.replace('_', ' ')}</strong></p>\r\n                <input type='text' value={props.customer[keye]} onChange={(event) => props.changer(event, keye, props.passedIndex)}></input>\r\n            </Grid>\r\n        )\r\n    });\r\n\r\n    return item;\r\n}\r\nexport default DataRow;","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport classes from './DataRows.module.css';\r\nimport DataRow from './DataRow/DataRow'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Aux from '../../hoc/Aux';\r\n\r\nconst DataRows = (props) => {\r\n\r\n    let customers = null;\r\n\r\n    if (props.policies) {\r\n\r\n        customers = props.policies.map((customer, index) => {\r\n            return (\r\n                <Aux key={`id_${customer.customer_name}_${index}`}>\r\n                    <Grid container item xs={12}  className={classes.DataRows}>\r\n\r\n                        <DataRow policyKeys={props.policyKeys} changer={props.changed} customer={customer} passedIndex={index} />\r\n\r\n                        <Grid item xs={12} md={2} className={classes.DataRow}>\r\n                            <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={() => props.del(index)}>Delete</Button>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    <Divider className={classes.Full}/>\r\n                </Aux>\r\n            );\r\n        })\r\n    }\r\n    return <Grid container item xs={12}>{customers}</Grid>;\r\n}\r\n\r\nexport default DataRows;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport classes from './InputForm.module.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst InputForm = (props) => {\r\n    const formItems = Object.keys(props.newRecord).map((key, index) => {\r\n        return (\r\n            <Grid xs={12} md={2} item className={classes.InputRow} key={`id_${key}_${index}`}>\r\n                <input type='text' onChange={(event) => props.input(event, key)} value={props.newRecord[key] || ''} />\r\n            </Grid>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Grid container item xs={12} >\r\n            {formItems}\r\n            <Grid xs={12} md={2} item className={classes.InputRow}>\r\n                <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={props.add} disabled={!props.formValid}>Add Policy</Button>\r\n            </Grid>\r\n\r\n            <Divider className={classes.Full} />\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default InputForm;\r\n\r\n","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport classes from './RadioFilters.module.css';\r\n\r\nconst RadioFilters = (props) => {\r\n    const matches = useMediaQuery('(min-width:960px)');\r\n\r\n    const radioData = [\r\n        { value: 'more', label: 'Premium £3000 or more' },\r\n        { value: 'less', label: 'Premium less than £3000' },\r\n        { value: 'none', label: 'No filter' }\r\n    ];\r\n\r\n    const radioContent = radioData.map((rd, index) => {\r\n        return (\r\n            <FormControlLabel\r\n                style={matches ? { display: 'inline-flex' } : { display: 'block' }}\r\n                key={`${rd.value}_${index}`}\r\n                value={rd.value}\r\n                control={\r\n                    <Radio\r\n                        color='primary'\r\n                    />\r\n                }\r\n                label={rd.label}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.Spacer}>\r\n            <RadioGroup row style={{ display: 'block' }} onChange={props.filterChange} value={props.radios}>\r\n                {radioContent}\r\n            </RadioGroup>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default RadioFilters;\r\n\r\n","import React from 'react';\r\nimport classes from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className={classes.Footer}>\r\n            <span>Created by Stuart Ferguson</span>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport classes from './ResetButton.module.css';\r\n\r\nconst ResetButton = (props) => {\r\n    return (\r\n        <Grid item md={2} xs={12} className={classes.ResetButton}>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={props.resetButton}>Reset</Button>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default ResetButton;","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableRow from '@material-ui/core/TableRow';\n// import Button from '@material-ui/core/Button';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport Headers from './components/Headers/Headers';\nimport DataRows from './components/DataRows/DataRows';\nimport InputForm from './components/InputForm/InputForm';\nimport RadioFilters from './components/RadioFilters/RadioFilters';\nimport Footer from './components/Footer/Footer';\nimport ResetButton from './components/ResetButton/ResetButton';\nimport data from './data/data.json'\n// import axios from 'axios';\nimport classes from './App.module.css';\n\nclass App extends Component {\n\n  state = {\n    sortDirection: [null, null, null, null, null],\n    policies: null,\n    client: null,\n    headers: null,\n    newRecord: {\n      customer_name: '',\n      customer_address: '',\n      premium: '',\n      policy_type: '',\n      insurer_name: ''\n    },\n    formValid: false,\n    filterPolicies: null,\n    radios: 'none'\n  }\n\n  componentDidMount() {\n    // console.log(data, Object.keys(data.client.policies[0]))\n\n    //set state from JSON\n    this.setState({\n      policies: data.client.policies,\n      client: data.client.name,\n      headers: Object.keys(data.client.policies[0]),     //get headers from JSON\n      filterPolicies: data.client.policies,\n    });\n  }\n\n  resetHandler = () => {\n    this.setState({\n      sortDirection: [null, null, null, null, null],\n      policies: data.client.policies,\n      client: data.client.name,\n      headers: Object.keys(data.client.policies[0]),\n      newRecord: {\n        customer_name: '',\n        customer_address: '',\n        premium: '',\n        policy_type: '',\n        insurer_name: ''\n      },\n      formValid: false,\n      filterPolicies: data.client.policies,\n      radios: 'none'\n    });\n    \n    window.location.href='/';\n  }\n\n\n  handleFilterChange = (event) => {\n\n    const filterArr = [...this.state.filterPolicies];\n\n    let filtered;\n    switch (event.target.value) {\n      case 'more':\n        filtered = filterArr.filter((f) => {\n          return f.premium >= 3000\n        });\n        break;\n      case 'less':\n        filtered = filterArr.filter((f) => {\n          return f.premium < 3000\n        });\n        break;\n      default:\n        filtered = this.state.filterPolicies;\n    }\n\n    this.setState({\n      policies: filtered,\n      radios: event.target.value\n    });\n  }\n\n  inputHandler = (event, field) => {\n\n    const newObj = { ...this.state.newRecord };\n    newObj[field] = event.target.value;\n\n    this.setState({\n      newRecord: newObj\n    });\n\n    this.setState((prevState) => {\n\n      const newRecordObj = prevState.newRecord\n      const newRecordKeys = Object.keys(newRecordObj);\n\n      const validCount = newRecordKeys\n        .map((key) => {\n          return newRecordObj[key];\n        })\n        .filter((record) => {\n          return record.length > 0;\n        });\n\n      return {\n        formValid: validCount.length === newRecordKeys.length\n      }\n    });\n  }\n\n\n  addHandler = () => {\n    this.setState((prevState) => {\n      return {\n        policies: prevState.filterPolicies,\n      }\n    });\n    const newArr = [...this.state.filterPolicies, this.state.newRecord];\n\n    this.setState({\n      newRecord: {\n        customer_name: '',\n        customer_address: '',\n        premium: '',\n        policy_type: '',\n        insurer_name: ''\n      },\n      formValid: false,\n      policies: newArr,\n      filterPolicies: newArr,\n      filters: 'none'\n    });\n  }\n\n  deleteHandler = (index) => {\n    this.setState((prevState) => {\n      return {\n        policies: prevState.filterPolicies,\n      }\n    });\n\n    const newArr = [...this.state.filterPolicies];\n    newArr.splice(index, 1);\n\n    this.setState({\n      policies: newArr,\n      filterPolicies: newArr,\n      filters: 'none'\n    });\n  }\n\n  changeDataHandler = (event, col, index) => {\n    this.setState((prevState) => {\n      return {\n        policies: prevState.filterPolicies,\n      }\n    });\n\n    const newArr = [...this.state.policies];\n    newArr[index][col] = event.target.value;\n\n    this.setState({\n      policies: newArr,\n      filterPolicies: newArr\n    });\n  }\n\n  //handle clicks on table headers\n  headerClickHandler = (event) => {\n\n    //sorting for 3 types (numbers, text and text that begins with a number)\n    //should be condensed (DRY) but code is reused a couple of times\n\n    let policiesArr = [...this.state.policies];\n    const dataType = event.target.id;\n    const sortIndex = event.target.getAttribute('data-index');\n\n    if (dataType === 'premium') {\n      policiesArr.sort((a, b) => {\n        let numA = Number(a[dataType]);\n        let numB = Number(b[dataType]);\n\n        if (!this.state.sortDirection[sortIndex] || this.state.sortDirection[sortIndex] === 'DESC') {\n          return (numA < numB) ? -1 : (numA > numB) ? 1 : 0;\n        }\n        else {\n          return (numA > numB) ? -1 : (numA < numB) ? 1 : 0;\n        }\n      });\n    }\n\n    else if (dataType === 'customer_address') {\n\n      policiesArr.sort((a, b) => {\n        let arrA = a[dataType].toUpperCase().split(' ');\n        let arrB = b[dataType].toUpperCase().split(' ');\n\n        if (arrA.length > 1) {\n          arrA.shift();\n        }\n        if (arrB.length > 1) {\n          arrB.shift();\n        }\n\n        let textAA = arrA.join(' ');\n        let textBB = arrB.join(' ');\n\n        if (!this.state.sortDirection[sortIndex] || this.state.sortDirection[sortIndex] === 'DESC') {\n          return (textAA < textBB) ? -1 : (textAA > textBB) ? 1 : 0;\n        }\n        else {\n          return (textAA > textBB) ? -1 : (textAA < textBB) ? 1 : 0;\n        }\n      });\n    }\n    else {\n      policiesArr.sort((a, b) => {\n        let textA = a[dataType].toUpperCase();\n        let textB = b[dataType].toUpperCase();\n        if (!this.state.sortDirection[sortIndex] || this.state.sortDirection[sortIndex] === 'DESC') {\n          return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n        }\n        else {\n          return (textA > textB) ? -1 : (textA < textB) ? 1 : 0;\n        }\n      });\n    }\n\n    //sort directions\n    let direction = 'DESC'\n    if (!this.state.sortDirection[sortIndex] || this.state.sortDirection[sortIndex] === 'DESC') {\n      direction = 'ASC';\n    }\n\n    let sortDirectionNew = [null, null, null, null, null];\n    sortDirectionNew[sortIndex] = direction;\n\n    this.setState({\n      policies: policiesArr,\n      filterPolicies: policiesArr,\n      sortDirection: sortDirectionNew\n    });\n  }\n\n  render() {\n\n    return (\n      <div className={classes.App}>\n        <Container maxWidth=\"lg\"  >\n          <Paper elevation={3} className={classes.Float}>\n            <Grid container item xs={12} justify=\"center\">\n              <Grid item xs={12} >\n                <Typography variant=\"h2\">\n                  {this.state.client}\n                </Typography>\n              </Grid>\n              <Grid item xs={10} >\n                <p>Online policy database. Columns can be sorted by clicking on the column headings.</p>\n              </Grid>\n\n              <RadioFilters filterChange={this.handleFilterChange} radios={this.state.radios} />\n              <Headers headers={this.state.headers} sortDirection={this.state.sortDirection} headerClick={this.headerClickHandler} />\n              <DataRows policies={this.state.policies} del={this.deleteHandler} changed={this.changeDataHandler} policyKeys={Object.keys(this.state.newRecord)} />\n              <InputForm newRecord={this.state.newRecord} formValid={this.state.formValid} add={this.addHandler} input={this.inputHandler} />\n\n              <ResetButton resetButton={this.resetHandler} />\n              <Footer />\n            </Grid>\n          </Paper>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}